<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - BookIT</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/BookIT.WebApp.styles.css" asp-append-version="true" />
</head>
<body class="d-flex flex-column min-vh-100">
    <header>
        <nav class="navbar navbar-expand-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">BookIT</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item"><a class="nav-link text-dark" asp-controller="Home" asp-action="Index">Главная</a></li>
                        <li class="nav-item"><a class="nav-link text-dark" asp-controller="Profile" asp-action="Index">Профиль</a></li>
                        <li class="nav-item"><a class="nav-link text-dark" asp-controller="Home" asp-action="Privacy">Приватность</a></li>
                        <li class="nav-item"><a class="nav-link text-dark" asp-controller="Catalog" asp-action="Index">Каталог</a></li>
                    </ul>
                </div>
                <form asp-action="Logout" asp-controller="Home" method="post">
                    <button type="submit" class="btn btn-link">Выйти</button>
                </form>
            </div>
        </nav>
    </header>

    <main class="flex-grow-1">
        <div class="container">
            <div id="support-chat-toggle" onclick="toggleChat()" style="position: fixed; bottom: 20px; right: 20px; background-color: #007bff; color: white; padding: 10px 15px; border-radius: 50px; cursor: pointer; z-index: 1001;">
                💬 Чат
            </div>

            <div id="support-chat-box" style="display: none; position: fixed; bottom: 80px; right: 20px; width: 300px; height: 400px; background-color: white; border: 1px solid #ccc; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); z-index: 1000; overflow: hidden; display: flex; flex-direction: column;">
                <div style="background-color: #007bff; color: white; padding: 10px; text-align: center;">Поддержка</div>
                <div id="chat-messages" style="flex: 1; padding: 10px; overflow-y: auto; font-size: 14px;"></div>
                <div style="padding: 10px; border-top: 1px solid #ccc;">
                    <input id="chat-input" type="text" placeholder="Напишите сообщение..." style="width: 100%; padding: 5px;" onkeydown="if(event.key === 'Enter') sendMessage()" />
                </div>
            </div>

            @RenderBody()
        </div>
    </main>

    <footer class="border-top footer text-muted mt-auto py-3">
        <div class="container">
            &copy; 2025 - BookIT - <a asp-controller="Home" asp-action="Privacy">Политика Приватности</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const currentUserId = '@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value';
    </script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("https://localhost:7117/supporthub", {
                accessTokenFactory: () => localStorage.getItem("access_token")
            })
            .build();

        connection.on("ReceiveMessage", (message) => {
            const chat = document.getElementById("chat-messages");
            chat.innerHTML += `<div><b>${message.senderName ?? "Поддержка"}:</b> ${message.content}</div>`;
            chat.scrollTop = chat.scrollHeight;
            console.log("📨 Получено сообщение:", message);
        });

        async function startConnection() {
            try {
                await connection.start();
                console.log("SignalR connected");
            } catch (err) {
                console.error("Ошибка подключения SignalR:", err);
                setTimeout(startConnection, 3000);
            }
        }

        function toggleChat() {
            const chatBox = document.getElementById("support-chat-box");
            chatBox.style.display = chatBox.style.display === "none" ? "flex" : "none";
        }

        async function sendMessage() {
            const input = document.getElementById("chat-input");
            const message = input.value.trim();
            if (!message) return;

            const senderId = currentUserId; // Определи currentUserId

            const response = await fetch("/messages/send", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    senderId: senderId,
                    receiverId: "f0b910ff-7740-4361-b700-4f6038cac663", // тестовый получатель
                    text: message
                })
            });

            if (response.ok) {
                // Отображаем сообщение сразу в чате от себя
                const chat = document.getElementById("chat-messages");
                chat.innerHTML += `<div><b>Вы:</b> ${message}</div>`;
                chat.scrollTop = chat.scrollHeight;
                input.value = "";
            } else {
                alert("Ошибка отправки сообщения");
            }
        }

        startConnection();

    </script>


    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
